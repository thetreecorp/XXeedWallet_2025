<?php

/**
 * BnbAccount Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto-generated by tatum.io
 * Do not edit this file manually!
 */

namespace Tatum\Model;
!defined("TATUM-SDK") && exit();

/**
 * BnbAccount Model
 */
class BnbAccount extends AbstractModel {

    public const _D = null;
    protected static $_name = "BnbAccount";
    protected static $_definition = [
        "account_number" => ["account_number", "float", null, "getAccountNumber", "setAccountNumber", null, ["r" => 0]], 
        "address" => ["address", "string", null, "getAddress", "setAddress", null, ["r" => 0]], 
        "balances" => ["balances", "\Tatum\Model\BnbAccountBalancesInner[]", null, "getBalances", "setBalances", null, ["r" => 0, "c" => 1]], 
        "flags" => ["flags", "float", null, "getFlags", "setFlags", null, ["r" => 0]], 
        "sequence" => ["sequence", "float", null, "getSequence", "setSequence", null, ["r" => 0]]
    ];

    /**
     * BnbAccount
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get account_number
     *
     * @return float|null
     */
    public function getAccountNumber(): ?float {
        return $this->_data["account_number"];
    }

    /**
     * Set account_number
     * 
     * @param float|null $account_number account_number
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setAccountNumber(?float $account_number) {
        return $this->_set("account_number", $account_number);
    }

    /**
     * Get address
     *
     * @return string|null
     */
    public function getAddress(): ?string {
        return $this->_data["address"];
    }

    /**
     * Set address
     * 
     * @param string|null $address address
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setAddress(?string $address) {
        return $this->_set("address", $address);
    }

    /**
     * Get balances
     *
     * @return \Tatum\Model\BnbAccountBalancesInner[]|null
     */
    public function getBalances(): ?array {
        return $this->_data["balances"];
    }

    /**
     * Set balances
     * 
     * @param \Tatum\Model\BnbAccountBalancesInner[]|null $balances balances
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setBalances(?array $balances) {
        return $this->_set("balances", $balances);
    }

    /**
     * Get flags
     *
     * @return float|null
     */
    public function getFlags(): ?float {
        return $this->_data["flags"];
    }

    /**
     * Set flags
     * 
     * @param float|null $flags flags
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setFlags(?float $flags) {
        return $this->_set("flags", $flags);
    }

    /**
     * Get sequence
     *
     * @return float|null
     */
    public function getSequence(): ?float {
        return $this->_data["sequence"];
    }

    /**
     * Set sequence
     * 
     * @param float|null $sequence sequence
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setSequence(?float $sequence) {
        return $this->_set("sequence", $sequence);
    }
}
