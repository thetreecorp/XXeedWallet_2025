<?php

/**
 * VetTxReceipt Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto-generated by tatum.io
 * Do not edit this file manually!
 */

namespace Tatum\Model;
!defined("TATUM-SDK") && exit();

/**
 * VetTxReceipt Model
 */
class VetTxReceipt extends AbstractModel {

    public const _D = null;
    protected static $_name = "VetTxReceipt";
    protected static $_definition = [
        "gas_used" => ["gasUsed", "float", null, "getGasUsed", "setGasUsed", null, ["r" => 0]], 
        "gas_payer" => ["gasPayer", "string", null, "getGasPayer", "setGasPayer", null, ["r" => 0]], 
        "paid" => ["paid", "string", null, "getPaid", "setPaid", null, ["r" => 0]], 
        "reward" => ["reward", "string", null, "getReward", "setReward", null, ["r" => 0]], 
        "reverted" => ["reverted", "bool", null, "getReverted", "setReverted", null, ["r" => 0]], 
        "meta" => ["meta", "\Tatum\Model\VetTxReceiptMeta", null, "getMeta", "setMeta", null, ["r" => 0]], 
        "outputs" => ["outputs", "\Tatum\Model\VetTxReceiptOutputsInner[]", null, "getOutputs", "setOutputs", null, ["r" => 0, "c" => 1]], 
        "block_number" => ["blockNumber", "float", null, "getBlockNumber", "setBlockNumber", null, ["r" => 0]], 
        "block_hash" => ["blockHash", "string", null, "getBlockHash", "setBlockHash", null, ["r" => 0]], 
        "transaction_hash" => ["transactionHash", "string", null, "getTransactionHash", "setTransactionHash", null, ["r" => 0]], 
        "status" => ["status", "string", null, "getStatus", "setStatus", null, ["r" => 0]]
    ];

    /**
     * VetTxReceipt
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get gas_used
     *
     * @return float|null
     */
    public function getGasUsed(): ?float {
        return $this->_data["gas_used"];
    }

    /**
     * Set gas_used
     * 
     * @param float|null $gas_used gas_used
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setGasUsed(?float $gas_used) {
        return $this->_set("gas_used", $gas_used);
    }

    /**
     * Get gas_payer
     *
     * @return string|null
     */
    public function getGasPayer(): ?string {
        return $this->_data["gas_payer"];
    }

    /**
     * Set gas_payer
     * 
     * @param string|null $gas_payer gas_payer
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setGasPayer(?string $gas_payer) {
        return $this->_set("gas_payer", $gas_payer);
    }

    /**
     * Get paid
     *
     * @return string|null
     */
    public function getPaid(): ?string {
        return $this->_data["paid"];
    }

    /**
     * Set paid
     * 
     * @param string|null $paid paid
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setPaid(?string $paid) {
        return $this->_set("paid", $paid);
    }

    /**
     * Get reward
     *
     * @return string|null
     */
    public function getReward(): ?string {
        return $this->_data["reward"];
    }

    /**
     * Set reward
     * 
     * @param string|null $reward reward
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setReward(?string $reward) {
        return $this->_set("reward", $reward);
    }

    /**
     * Get reverted
     *
     * @return bool|null
     */
    public function getReverted(): ?bool {
        return $this->_data["reverted"];
    }

    /**
     * Set reverted
     * 
     * @param bool|null $reverted reverted
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setReverted(?bool $reverted) {
        return $this->_set("reverted", $reverted);
    }

    /**
     * Get meta
     *
     * @return \Tatum\Model\VetTxReceiptMeta|null
     */
    public function getMeta(): ?\Tatum\Model\VetTxReceiptMeta {
        return $this->_data["meta"];
    }

    /**
     * Set meta
     * 
     * @param \Tatum\Model\VetTxReceiptMeta|null $meta meta
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setMeta(?\Tatum\Model\VetTxReceiptMeta $meta) {
        return $this->_set("meta", $meta);
    }

    /**
     * Get outputs
     *
     * @return \Tatum\Model\VetTxReceiptOutputsInner[]|null
     */
    public function getOutputs(): ?array {
        return $this->_data["outputs"];
    }

    /**
     * Set outputs
     * 
     * @param \Tatum\Model\VetTxReceiptOutputsInner[]|null $outputs List of recipient addresses and amounts to send to each of them.
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setOutputs(?array $outputs) {
        return $this->_set("outputs", $outputs);
    }

    /**
     * Get block_number
     *
     * @return float|null
     */
    public function getBlockNumber(): ?float {
        return $this->_data["block_number"];
    }

    /**
     * Set block_number
     * 
     * @param float|null $block_number block_number
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setBlockNumber(?float $block_number) {
        return $this->_set("block_number", $block_number);
    }

    /**
     * Get block_hash
     *
     * @return string|null
     */
    public function getBlockHash(): ?string {
        return $this->_data["block_hash"];
    }

    /**
     * Set block_hash
     * 
     * @param string|null $block_hash block_hash
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setBlockHash(?string $block_hash) {
        return $this->_set("block_hash", $block_hash);
    }

    /**
     * Get transaction_hash
     *
     * @return string|null
     */
    public function getTransactionHash(): ?string {
        return $this->_data["transaction_hash"];
    }

    /**
     * Set transaction_hash
     * 
     * @param string|null $transaction_hash transaction_hash
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setTransactionHash(?string $transaction_hash) {
        return $this->_set("transaction_hash", $transaction_hash);
    }

    /**
     * Get status
     *
     * @return string|null
     */
    public function getStatus(): ?string {
        return $this->_data["status"];
    }

    /**
     * Set status
     * 
     * @param string|null $status status
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setStatus(?string $status) {
        return $this->_set("status", $status);
    }
}
