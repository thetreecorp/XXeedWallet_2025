<?php

/**
 * BchTx_vin_inner Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto-generated by tatum.io
 * Do not edit this file manually!
 */

namespace Tatum\Model;
!defined("TATUM-SDK") && exit();

/**
 * BchTx_vin_inner Model
 */
class BchTxVinInner extends AbstractModel {

    public const _D = null;
    protected static $_name = "BchTx_vin_inner";
    protected static $_definition = [
        "txid" => ["txid", "string", null, "getTxid", "setTxid", null, ["r" => 0]], 
        "vout" => ["vout", "float", null, "getVout", "setVout", null, ["r" => 0]], 
        "script_sig" => ["scriptSig", "\Tatum\Model\BchTxVinInnerScriptSig", null, "getScriptSig", "setScriptSig", null, ["r" => 0]], 
        "coinbase" => ["coinbase", "string", null, "getCoinbase", "setCoinbase", null, ["r" => 0]], 
        "sequence" => ["sequence", "float", null, "getSequence", "setSequence", null, ["r" => 0]]
    ];

    /**
     * BchTxVinInner
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get txid
     *
     * @return string|null
     */
    public function getTxid(): ?string {
        return $this->_data["txid"];
    }

    /**
     * Set txid
     * 
     * @param string|null $txid txid
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setTxid(?string $txid) {
        return $this->_set("txid", $txid);
    }

    /**
     * Get vout
     *
     * @return float|null
     */
    public function getVout(): ?float {
        return $this->_data["vout"];
    }

    /**
     * Set vout
     * 
     * @param float|null $vout vout
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setVout(?float $vout) {
        return $this->_set("vout", $vout);
    }

    /**
     * Get script_sig
     *
     * @return \Tatum\Model\BchTxVinInnerScriptSig|null
     */
    public function getScriptSig(): ?\Tatum\Model\BchTxVinInnerScriptSig {
        return $this->_data["script_sig"];
    }

    /**
     * Set script_sig
     * 
     * @param \Tatum\Model\BchTxVinInnerScriptSig|null $script_sig script_sig
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setScriptSig(?\Tatum\Model\BchTxVinInnerScriptSig $script_sig) {
        return $this->_set("script_sig", $script_sig);
    }

    /**
     * Get coinbase
     *
     * @return string|null
     */
    public function getCoinbase(): ?string {
        return $this->_data["coinbase"];
    }

    /**
     * Set coinbase
     * 
     * @param string|null $coinbase coinbase
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setCoinbase(?string $coinbase) {
        return $this->_set("coinbase", $coinbase);
    }

    /**
     * Get sequence
     *
     * @return float|null
     */
    public function getSequence(): ?float {
        return $this->_data["sequence"];
    }

    /**
     * Set sequence
     * 
     * @param float|null $sequence sequence
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setSequence(?float $sequence) {
        return $this->_set("sequence", $sequence);
    }
}
