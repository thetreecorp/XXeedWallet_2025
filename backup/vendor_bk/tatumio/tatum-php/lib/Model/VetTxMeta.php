<?php

/**
 * VetTx_meta Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto-generated by tatum.io
 * Do not edit this file manually!
 */

namespace Tatum\Model;
!defined("TATUM-SDK") && exit();

/**
 * VetTx_meta Model
 */
class VetTxMeta extends AbstractModel {

    public const _D = null;
    protected static $_name = "VetTx_meta";
    protected static $_definition = [
        "block_id" => ["blockID", "string", null, "getBlockId", "setBlockId", null, ["r" => 0]], 
        "block_number" => ["blockNumber", "float", null, "getBlockNumber", "setBlockNumber", null, ["r" => 0]], 
        "block_timestamp" => ["blockTimestamp", "float", null, "getBlockTimestamp", "setBlockTimestamp", null, ["r" => 0]]
    ];

    /**
     * VetTxMeta
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get block_id
     *
     * @return string|null
     */
    public function getBlockId(): ?string {
        return $this->_data["block_id"];
    }

    /**
     * Set block_id
     * 
     * @param string|null $block_id block_id
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setBlockId(?string $block_id) {
        return $this->_set("block_id", $block_id);
    }

    /**
     * Get block_number
     *
     * @return float|null
     */
    public function getBlockNumber(): ?float {
        return $this->_data["block_number"];
    }

    /**
     * Set block_number
     * 
     * @param float|null $block_number block_number
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setBlockNumber(?float $block_number) {
        return $this->_set("block_number", $block_number);
    }

    /**
     * Get block_timestamp
     *
     * @return float|null
     */
    public function getBlockTimestamp(): ?float {
        return $this->_data["block_timestamp"];
    }

    /**
     * Set block_timestamp
     * 
     * @param float|null $block_timestamp block_timestamp
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setBlockTimestamp(?float $block_timestamp) {
        return $this->_set("block_timestamp", $block_timestamp);
    }
}
