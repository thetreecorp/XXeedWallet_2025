<?php

/**
 * BtcTxInput Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto-generated by tatum.io
 * Do not edit this file manually!
 */

namespace Tatum\Model;
!defined("TATUM-SDK") && exit();

/**
 * BtcTxInput Model
 */
class BtcTxInput extends AbstractModel {

    public const _D = null;
    protected static $_name = "BtcTxInput";
    protected static $_definition = [
        "prevout" => ["prevout", "\Tatum\Model\BtcTxInputPrevOut", null, "getPrevout", "setPrevout", null, ["r" => 0]], 
        "script" => ["script", "string", null, "getScript", "setScript", null, ["r" => 0]], 
        "witness" => ["witness", "string", null, "getWitness", "setWitness", null, ["r" => 0]], 
        "sequence" => ["sequence", "float", null, "getSequence", "setSequence", null, ["r" => 0]], 
        "coin" => ["coin", "\Tatum\Model\BtcTxInputCoin", null, "getCoin", "setCoin", null, ["r" => 0]]
    ];

    /**
     * BtcTxInput
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get prevout
     *
     * @return \Tatum\Model\BtcTxInputPrevOut|null
     */
    public function getPrevout(): ?\Tatum\Model\BtcTxInputPrevOut {
        return $this->_data["prevout"];
    }

    /**
     * Set prevout
     * 
     * @param \Tatum\Model\BtcTxInputPrevOut|null $prevout prevout
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setPrevout(?\Tatum\Model\BtcTxInputPrevOut $prevout) {
        return $this->_set("prevout", $prevout);
    }

    /**
     * Get script
     *
     * @return string|null
     */
    public function getScript(): ?string {
        return $this->_data["script"];
    }

    /**
     * Set script
     * 
     * @param string|null $script Data generated by a spender which is almost always used as variables to satisfy a pubkey script.
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setScript(?string $script) {
        return $this->_set("script", $script);
    }

    /**
     * Get witness
     *
     * @return string|null
     */
    public function getWitness(): ?string {
        return $this->_data["witness"];
    }

    /**
     * Set witness
     * 
     * @param string|null $witness Transaction witness.
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setWitness(?string $witness) {
        return $this->_set("witness", $witness);
    }

    /**
     * Get sequence
     *
     * @return float|null
     */
    public function getSequence(): ?float {
        return $this->_data["sequence"];
    }

    /**
     * Set sequence
     * 
     * @param float|null $sequence sequence
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setSequence(?float $sequence) {
        return $this->_set("sequence", $sequence);
    }

    /**
     * Get coin
     *
     * @return \Tatum\Model\BtcTxInputCoin|null
     */
    public function getCoin(): ?\Tatum\Model\BtcTxInputCoin {
        return $this->_data["coin"];
    }

    /**
     * Set coin
     * 
     * @param \Tatum\Model\BtcTxInputCoin|null $coin coin
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setCoin(?\Tatum\Model\BtcTxInputCoin $coin) {
        return $this->_set("coin", $coin);
    }
}
